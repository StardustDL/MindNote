@page "/categories/{id:int}/edit"
@using MindNote.Client.Host.Shared
@using MindNote.Client.SDK.API
@using MindNote.Data
@using System.Linq
@inject INotesClient NoteClient
@inject IUsersClient UserClient
@inject ICategoriesClient CategoryClient
@inject IUriHelper UriHelper

<ul class="breadcrumb">
    <li class="breadcrumb-item"><a href="/categories">Categories</a></li>
    <li class="breadcrumb-item">
        <a href="/categories/@Id">@Id</a>
    </li>
    <li class="breadcrumb-item active">Edit</li>
</ul>

@if (Model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <CategoryEdit Model="@Model" OnSubmit="@OnSubmit" />
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Parameter]
    private int Id { get; set; }

    CategoryEditModel Model { get; set; }

    string Token { get; set; } = null;

    protected override async Task OnInitAsync()
    {
        var user = (await authenticationStateTask).User;
        if (!user.Identity.IsAuthenticated) return;

        Token = UserHelper.GetAccessToken(user);

        NoteClient.BaseUrl = Settings.ApiServerUrl;
        CategoryClient.BaseUrl = Settings.ApiServerUrl;
        UserClient.BaseUrl = Settings.ApiServerUrl;

        Category item = await CategoryClient.Get(Token, Id);
        if (item.UserId != UserHelper.GetId(user)) return;

        Model = new CategoryEditModel(item);
    }

    private async Task OnSubmit()
    {
        var id = await CategoryClient.Update(Token, Id, Model.ToModel());
        UriHelper.NavigateTo($"/categories/{id}");
    }
}
