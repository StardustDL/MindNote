@page "/account/logout"
@page "/account/logout/{action}"
@using MindNote.Frontend.SDK.API
@using MindNote.Data
@inject HttpClient Http
@inject CustomUsersClient UserClient
@inject IUriHelper UriHelper
@inject AuthenticationStateProvider AuthenticationStateProvider

<h1>Log out - @Message</h1>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private LoginModel Model = new LoginModel();

    [Parameter]
    private string Action { get; set; } = null;

    string Message { get; set; } = "waiting...";

    protected override async Task OnInitAsync()
    {
        {
            var user = (await authenticationStateTask).User;
            if (!user.Identity.IsAuthenticated)
            {
                UriHelper.NavigateTo("");
                return;
            }
        }

        if (Action == "callback")
        {
            var auth = (AuthStateProvider)AuthenticationStateProvider;
            auth.Logout();
            UriHelper.NavigateTo("");
        }
        else
        {
            string authUrl = await HostServer.GetEndSessionUrl(Http, AuthStateProvider.Identity);
            UriHelper.NavigateTo(authUrl);
        }
    }
}