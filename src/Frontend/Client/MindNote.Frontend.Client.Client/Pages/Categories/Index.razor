@page "/categories"
@using MindNote.Frontend.Client.Shared
@using MindNote.Frontend.SDK.API
@using System.Linq
@using MindNote.Data
@inject CategoriesClient CategoryClient

<div class="d-flex flex-row">
    <h1>Categories</h1>
    <AuthorizeView>
        <div class="d-flex flex-row-reverse flex-grow-1 align-items-center">
            <a href="categories/new" class="btn btn-success"><i class="fa fa-plus"></i></a>
        </div>
    </AuthorizeView>
</div>


@if (Data == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover" style="margin-top:10px">
        <thead>
            <tr>
                <th style="width:6%">
                    Id
                </th>
                <th>
                    Name
                </th>
                <th>
                    User
                </th>
                <th>
                    Operations
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Data)
            {
                <tr>
                    <td>
                        @item.Data.Id
                    </td>
                    <td>
                        <a href="categories/@item.Data.Id">
                            <CategoryDisplay value="@item.Data" />
                        </a>
                    </td>
                    <td>
                        @if (item.Data.User != null)
                        {
                            <a>
                                <UserDisplay value="@item.Data.User" />
                            </a>
                        }
                    </td>
                    <td>
                        <AuthorizeView>
                            @if (item.Data.User != null && item.Data.User.Id == UserHelper.GetId(context.User))
                            {
                                <div class="btn-group-sm">
                                    <a href="categories/@item.Data.Id/edit" class="btn btn-outline-primary">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <button class="btn btn-outline-danger" @onclick="@(async e => await OnDelete(item.Data.Id))">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </div>
                            }
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    IList<CategoryViewModel> Data { get; set; }

    protected override async Task OnInitAsync()
    {
        await Update();
    }

    private async Task Update()
    {
        var ms = (await CategoryClient.Query()).Nodes;
        var data = ms.Select(x => new CategoryViewModel { Data = x }).ToList();
        Data = data;
    }

    private async Task OnDelete(int id)
    {
        await CategoryClient.Delete(id);
        await Update();
    }
}
