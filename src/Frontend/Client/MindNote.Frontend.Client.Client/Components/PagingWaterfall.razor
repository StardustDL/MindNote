@using MindNote.Frontend.SDK.API.Models
@typeparam TItem

@if (Data != null)
{
    <div class="card-columns @(!Column.HasValue ? "waterfall-card-columns" : "")" style="@(Column.HasValue ? $"column-count: {Column.Value}" : "")">
        @foreach (var item in Data.Nodes)
        {
            @ItemTemplate(item)
        }
    </div>

    @if (Data.PageInfo != null)
    {
        <div class="text-center">
            <ul class="pagination" style="display:inline-flex">
                @if (Data.PageInfo.HasPreviousPage)
                {
                    <li class="page-item"><a class="page-link" @onclick="@(async e=>await OnPreviousPage.InvokeAsync(null))"><i class="fa fa-angle-left"></i></a></li>
                }
                @if (Data.PageInfo.HasNextPage)
                {
                    <li class="page-item"><a class="page-link" @onclick="@(async e=>await OnNextPage.InvokeAsync(null))"><i class="fa fa-angle-right"></i></a></li>
                }
            </ul>
        </div>
    }
}

@code {

    [Parameter]
    private PagingEnumerable<TItem> Data { get; set; }

    [Parameter]
    private int? Column { get; set; } = null;

    [Parameter]
    private RenderFragment<TItem> ItemTemplate { get; set; }

    [Parameter]
    private EventCallback OnUpdatePage { get; set; }

    [Parameter]
    private EventCallback OnPreviousPage { get; set; }

    [Parameter]
    private EventCallback OnNextPage { get; set; }
}
